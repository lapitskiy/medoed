import os
import logging
import telegram.bot
from telegram.ext import Updater, RegexHandler
from telegram.ext import CommandHandler
from telegram.ext import MessageHandler, Filters

from telegram import ReplyKeyboardMarkup
from telegram import KeyboardButton

import redis

#from bot_class import red

from bot_class import *

from bot_settings import settings

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = '1149862512:AAFHaUq_sy_ucvENdke7lOOh9CxVWVnm9Qs'
REQUEST_KWARGS={
    # "USERNAME:PASSWORD@" is optional, if you need authentication:
    'proxy_url': 'http://KEy2hn:YJzsyg@186.65.115.105:9425/',
    'connect_timeout' : 60,
    'read_timeout' : 60
}

# ReplyKeyboardMarkup

def start(update, context):

    context.bot.send_message(chat_id=update.effective_chat.id, text="I'm a bot, please talk to me!", reply_markup=get_keyboard())
    #context.bot.message.reply_text('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {}! \n–ü–æ–≥–æ–≤–æ—Ä–∏—Ç–µ —Å–æ –º–Ω–æ–π {}!'
    #                       .format(bot.message.chat.first_name, smile), reply_markup=get_keyboard())  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç


def echo(update, context):
    if update.message.text == '–í–∫–ª—é—á–∏—Ç—å –ª–µ–Ω—Ç—É –¥–∞–Ω–Ω—ã—Ö':
        print('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã ', update)
        thread.bot_updater(update, context)
        settings.FRESH_DATA = True
        #context.bot.send_message(chat_id=update.effective_chat.id, text="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã")
    if update.message.text == '–í—ã–∫–ª—é—á–∏—Ç—å –ª–µ–Ω—Ç—É –¥–∞–Ω–Ω—ã—Ö':
        print('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã ', update)
        #thread.bot_updater(update, context)
        settings.FRESH_DATA = False
        # context.bot.send_message(chat_id=update.effective_chat.id, text="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã")


def last_data(update, context):
    text = '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ'
    print(text)
    context.bot.send_message(chat_id=update.effective_chat.id, text=text)


SMILE = ['üòä', 'üòÄ', 'üòá', 'ü§†', 'üòé', 'ü§ì', 'üë∂', 'üßë‚ÄçüöÄ', 'üëÆ', 'ü¶∏', 'üßü']
CALLBACK_BUTTON_DATA = "–í–∫–ª—é—á–∏—Ç—å –ª–µ–Ω—Ç—É –¥–∞–Ω–Ω—ã—Ö"
CALLBACK_BUTTON_DATA_EXIT = "–í—ã–∫–ª—é—á–∏—Ç—å –ª–µ–Ω—Ç—É –¥–∞–Ω–Ω—ã—Ö"
CALLBACK_BUTTON_EXIT_BIRGA = "–í—ã–π—Ç–∏ –∏–∑ –ø–æ–∑–∏—Ü–∏–∏ –ë–∏—Ä–∂–∞"
CALLBACK_BUTTON_EXIT_MARGA = "–í—ã–π—Ç–∏ –∏–∑ –ø–æ–∑–∏—Ü–∏–∏ –ú–∞—Ä–∂–∞"



# —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –µ–µ —Ä–∞–∑–º–µ—Ç–∫—É
def get_keyboard():
    #contact_button = KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã', request_contact=True)
    #location_button = KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é', request_location=True)
    my_keyboard = ReplyKeyboardMarkup([[CALLBACK_BUTTON_DATA,CALLBACK_BUTTON_DATA_EXIT],
                                       [CALLBACK_BUTTON_EXIT_BIRGA, CALLBACK_BUTTON_EXIT_MARGA],
                                       ], resize_keyboard=True)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    return my_keyboard



if __name__ == '__main__':

    # –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
    thread = ThreadData()
    thread.start()

    # –±–æ—Ç —Ç–µ–ª–µ–≥–∞
    # updater = Updater(token=TOKEN, request_kwargs=REQUEST_KWARGS, use_context=True)
    updater = Updater(token=TOKEN, use_context=True)

    dispatcher = updater.dispatcher
    start_handler = CommandHandler('start', start)
    dispatcher.add_handler(start_handler)

    echo_handler = MessageHandler(Filters.text & (~Filters.command), echo)
    dispatcher.add_handler(echo_handler)

    updater.start_polling()










